name: "pull-request-write"
on:
  push:
    branches:
      - main

  pull_request:

permissions: 
  pull-requests: write
  contents: write

env:
  NIX_VERSION: nix-2.13.2
  NIXPKGS_CHANNEL: nixos-22.11
  CACHIX_NAME: golden-gate-ggx

jobs:
  build-and-publish-draft:
      # as soon as it will be slow, can 
      # 1. run in parallel 
      # 2. cachix watch exec so cache upload is concurrent to build 
      # 3. use  cachix zstd with higher level of compression
      # 4. bake nix pkgs/cache into ois image and run CI from it 
    name: "build-and-publish-draft"
    runs-on:
      - buildjet-32vcpu-ubuntu-2204
    concurrency:
      group: build-and-publish-draft-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: cachix-install-nix-action
        uses: cachix/install-nix-action@be4cef7b776998e97233d6e0b84c538eb8122d76
        with:
          install_url: https://releases.nixos.org/nix/${{ env.NIX_VERSION }}/install
          nix_path: nixpkgs=channel:${{ env.NIXPKGS_CHANNEL }}
          extra_nix_config: |
            sandbox = relaxed
            narinfo-cache-negative-ttl = 0      
            system-features = kvm
            http2 = true
      - name: cachix-cachix-action
        uses: cachix/cachix-action@298387a7aea14d6564aa5d6ead79272878339c8b
        with:
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          name: ${{ env.CACHIX_NAME }}
      - name: nix-channel-env
        run: |  
          nix-channel --add https://nixos.org/channels/${{ env.NIXPKGS_CHANNEL }} nixpkgs
          nix-channel --update
          nix profile install nixpkgs#git
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false
      - run: |          
          mkdir out
          nix build --print-build-logs --show-trace --no-update-lock-file
          cp ./result/lib/golden_gate_runtime.compact.compressed.wasm ./out
          nix build .#golden-gate-node --print-build-logs --show-trace --no-update-lock-file
          cp ./result/bin/golden-gate-node ./out  
          # can add here contracts and oci image, etc                  
          
      - name: action-gh-release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          fail_on_unmatched_files: true
          name: ${{ github.ref_name }}-${{ github.event.pull_request.head.sha }}
          prerelease: true 
          tag_name: ${{ github.ref_name }}
          target_commitish: ${{ github.sha }}
          files: |
            ./out/*
